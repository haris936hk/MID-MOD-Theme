{% doc %}
  Designer discount notification and application snippet.
  Shows a 20% discount code for industry designers.

  @param {boolean} [show_banner] - Whether to show the discount banner
  @param {string} [discount_code] - The discount code to display (default: DESIGNER20)
  @param {string} [target_url] - URL to redirect after discount application

  @example
  {% render 'designer-discount', show_banner: true %}
{% enddoc %}

{%- assign discount_code = discount_code | default: 'DESIGNER20' -%}
{%- assign show_banner = show_banner | default: true -%}

{% if show_banner %}
<div class="designer-discount-banner" data-discount-banner>
  <div class="designer-discount__content">
    <div class="designer-discount__text">
      <span class="discount-label">{{ 'general.designer_discount.industry_professional' | t }}</span>
      <span class="discount-details">{{ 'general.designer_discount.save_twenty_percent' | t }}</span>
    </div>
    <div class="designer-discount__actions">
      <span class="discount-code" data-discount-code="{{ discount_code }}">
        {{ 'general.designer_discount.code' | t }}: <strong>{{ discount_code }}</strong>
      </span>
      <button
        type="button"
        class="btn btn--secondary btn--small copy-discount-btn"
        data-copy-text="{{ discount_code }}"
        aria-label="{{ 'general.designer_discount.copy_code' | t }}"
      >
        {{ 'actions.copy' | t }}
      </button>
      <button
        type="button"
        class="btn btn--link btn--small close-banner-btn"
        data-close-banner
        aria-label="{{ 'actions.close' | t }}"
      >
        ×
      </button>
    </div>
  </div>
</div>
{% endif %}

<div class="designer-discount-modal" data-discount-modal style="display: none;">
  <div class="modal-overlay" data-modal-overlay></div>
  <div class="modal-content">
    <div class="modal-header">
      <h3>{{ 'general.designer_discount.verify_title' | t }}</h3>
      <button type="button" class="btn btn--link close-modal-btn" data-close-modal>×</button>
    </div>
    <div class="modal-body">
      <p>{{ 'general.designer_discount.verify_message' | t }}</p>
      <form class="designer-verification-form" data-verification-form>
        <div class="form-field">
          <label for="business-name">{{ 'general.designer_discount.business_name' | t }}</label>
          <input
            type="text"
            id="business-name"
            name="business_name"
            required
            placeholder="{{ 'general.designer_discount.business_name_placeholder' | t }}"
          >
        </div>
        <div class="form-field">
          <label for="professional-email">{{ 'general.designer_discount.professional_email' | t }}</label>
          <input
            type="email"
            id="professional-email"
            name="professional_email"
            required
            placeholder="{{ 'general.designer_discount.email_placeholder' | t }}"
          >
        </div>
        <div class="form-field">
          <label>
            <input type="checkbox" name="terms_accepted" required>
            {{ 'general.designer_discount.terms_agreement' | t }}
          </label>
        </div>
        <div class="form-actions">
          <button type="submit" class="btn btn--primary">
            {{ 'general.designer_discount.verify_and_apply' | t }}
          </button>
          <button type="button" class="btn btn--secondary" data-close-modal>
            {{ 'actions.cancel' | t }}
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

{% stylesheet %}
  .designer-discount-banner {
    background: var(--color-background);
    border: 1px solid rgba(var(--color-foreground-rgb), 0.15);
    border-radius: var(--border-radius);
    padding: 1rem;
    margin: 1rem 0;
    display: flex;
    align-items: center;
    justify-content: space-between;
    position: relative;
  }

  .designer-discount__content {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    gap: 1rem;
  }

  .designer-discount__text {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .discount-label {
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    color: var(--color-foreground-heading);
    font-size: 0.875rem;
  }

  .discount-details {
    color: var(--color-foreground);
    font-size: 0.875rem;
    text-transform: lowercase;
  }

  .designer-discount__actions {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .discount-code {
    font-family: var(--font-body-family);
    font-size: 0.875rem;
    color: var(--color-foreground);
    background: rgba(var(--color-foreground-rgb), 0.05);
    padding: 0.5rem 0.75rem;
    border-radius: var(--border-radius);
    border: 1px solid rgba(var(--color-foreground-rgb), 0.15);
  }

  .discount-code strong {
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .copy-discount-btn {
    white-space: nowrap;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .close-banner-btn {
    font-size: 1.25rem;
    line-height: 1;
    padding: 0.25rem;
    color: var(--color-foreground);
  }

  .designer-discount-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 9999;
  }

  .modal-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
  }

  .modal-content {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: var(--color-background);
    border-radius: var(--border-radius);
    padding: 2rem;
    width: 90%;
    max-width: 500px;
    max-height: 90vh;
    overflow-y: auto;
  }

  .modal-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 1.5rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid rgba(var(--color-foreground-rgb), 0.15);
  }

  .modal-header h3 {
    margin: 0;
    font-size: 1.5rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .close-modal-btn {
    font-size: 1.5rem;
    line-height: 1;
    padding: 0.25rem;
  }

  .form-field {
    margin-bottom: 1.5rem;
  }

  .form-field label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    color: var(--color-foreground-heading);
  }

  .form-field input[type="text"],
  .form-field input[type="email"] {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid rgba(var(--color-foreground-rgb), 0.25);
    border-radius: var(--border-radius);
    font-size: 1rem;
    background: var(--color-background);
    color: var(--color-foreground);
  }

  .form-field input[type="text"]:focus,
  .form-field input[type="email"]:focus {
    outline: none;
    border-color: var(--color-foreground);
    box-shadow: 0 0 0 1px var(--color-foreground);
  }

  .form-field input[type="checkbox"] {
    margin-right: 0.5rem;
  }

  .form-actions {
    display: flex;
    gap: 1rem;
    justify-content: flex-end;
    margin-top: 2rem;
  }

  /* Responsive adjustments */
  @media screen and (max-width: 768px) {
    .designer-discount__content {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }

    .designer-discount__actions {
      width: 100%;
      justify-content: space-between;
    }

    .modal-content {
      width: 95%;
      padding: 1.5rem;
    }

    .form-actions {
      flex-direction: column;
    }
  }

  /* Animation for banner show/hide */
  .designer-discount-banner.hiding {
    opacity: 0;
    transform: translateY(-20px);
    transition: all 0.3s ease;
  }

  .designer-discount-banner.hiding.hidden {
    display: none;
  }
{% endstylesheet %}

{% javascript %}
  class DesignerDiscount extends HTMLElement {
    constructor() {
      super();
      this.init();
    }

    init() {
      this.discountBanner = this.querySelector('[data-discount-banner]');
      this.discountModal = this.querySelector('[data-discount-modal]');
      this.copyBtn = this.querySelector('.copy-discount-btn');
      this.closeBannerBtn = this.querySelector('[data-close-banner]');
      this.closeModalBtns = this.querySelectorAll('[data-close-modal]');
      this.modalOverlay = this.querySelector('[data-modal-overlay]');
      this.verificationForm = this.querySelector('[data-verification-form]');

      this.bindEvents();
      this.checkDiscountStatus();
    }

    bindEvents() {
      // Copy discount code
      if (this.copyBtn) {
        this.copyBtn.addEventListener('click', this.copyDiscountCode.bind(this));
      }

      // Close banner
      if (this.closeBannerBtn) {
        this.closeBannerBtn.addEventListener('click', this.closeBanner.bind(this));
      }

      // Close modal
      this.closeModalBtns.forEach(btn => {
        btn.addEventListener('click', this.closeModal.bind(this));
      });

      if (this.modalOverlay) {
        this.modalOverlay.addEventListener('click', this.closeModal.bind(this));
      }

      // Handle form submission
      if (this.verificationForm) {
        this.verificationForm.addEventListener('submit', this.handleVerification.bind(this));
      }

      // ESC key to close modal
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && this.discountModal && this.discountModal.style.display !== 'none') {
          this.closeModal();
        }
      });
    }

    async copyDiscountCode() {
      const code = this.copyBtn.dataset.copyText;

      try {
        await navigator.clipboard.writeText(code);
        this.showCopyFeedback();
      } catch (err) {
        // Fallback for older browsers
        this.fallbackCopyToClipboard(code);
      }
    }

    fallbackCopyToClipboard(text) {
      const textArea = document.createElement('textarea');
      textArea.value = text;
      textArea.style.position = 'fixed';
      textArea.style.opacity = '0';
      document.body.appendChild(textArea);
      textArea.focus();
      textArea.select();

      try {
        document.execCommand('copy');
        this.showCopyFeedback();
      } catch (err) {
        console.error('Copy failed', err);
      }

      document.body.removeChild(textArea);
    }

    showCopyFeedback() {
      const originalText = this.copyBtn.textContent;
      this.copyBtn.textContent = '{{ "actions.copied" | t }}';
      this.copyBtn.classList.add('copied');

      setTimeout(() => {
        this.copyBtn.textContent = originalText;
        this.copyBtn.classList.remove('copied');
      }, 2000);
    }

    closeBanner() {
      if (this.discountBanner) {
        this.discountBanner.classList.add('hiding');
        setTimeout(() => {
          this.discountBanner.classList.add('hidden');
          localStorage.setItem('minmod_discount_banner_closed', 'true');
        }, 300);
      }
    }

    closeModal() {
      if (this.discountModal) {
        this.discountModal.style.display = 'none';
        document.body.classList.remove('modal-open');
      }
    }

    openModal() {
      if (this.discountModal) {
        this.discountModal.style.display = 'block';
        document.body.classList.add('modal-open');
      }
    }

    async handleVerification(e) {
      e.preventDefault();

      const formData = new FormData(this.verificationForm);
      const data = {
        business_name: formData.get('business_name'),
        professional_email: formData.get('professional_email'),
        terms_accepted: formData.get('terms_accepted') === 'on'
      };

      // Basic validation
      if (!data.business_name || !data.professional_email || !data.terms_accepted) {
        alert('{{ "general.designer_discount.validation_error" | t }}');
        return;
      }

      try {
        // Store verification status
        localStorage.setItem('minmod_designer_verified', 'true');
        localStorage.setItem('minmod_designer_data', JSON.stringify(data));

        // Apply discount code to cart
        this.applyDiscountCode();

        // Close modal and show success
        this.closeModal();
        this.showSuccessMessage();

      } catch (error) {
        console.error('Verification error:', error);
        alert('{{ "general.designer_discount.verification_error" | t }}');
      }
    }

    async applyDiscountCode() {
      const code = this.querySelector('[data-discount-code]').dataset.discountCode;

      try {
        const response = await fetch('/discount/' + code, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          }
        });

        if (response.ok) {
          // Redirect to cart or current page with discount applied
          window.location.href = window.location.href.split('?')[0] + '?discount=' + code;
        }
      } catch (error) {
        console.error('Error applying discount:', error);
      }
    }

    showSuccessMessage() {
      // Create and show success notification
      const notification = document.createElement('div');
      notification.className = 'discount-success-notification';
      notification.innerHTML = `
        <div class="notification-content">
          <span>{{ "general.designer_discount.success_message" | t }}</span>
          <button type="button" class="btn btn--link" onclick="this.parentNode.parentNode.remove()">×</button>
        </div>
      `;

      document.body.appendChild(notification);

      setTimeout(() => {
        notification.remove();
      }, 5000);
    }

    checkDiscountStatus() {
      // Check if banner was previously closed
      if (localStorage.getItem('minmod_discount_banner_closed') === 'true') {
        if (this.discountBanner) {
          this.discountBanner.style.display = 'none';
        }
      }

      // Check if user is already verified
      if (localStorage.getItem('minmod_designer_verified') === 'true') {
        if (this.discountBanner) {
          this.discountBanner.style.display = 'none';
        }
      }
    }
  }

  // Register the custom element
  if (!customElements.get('designer-discount')) {
    customElements.define('designer-discount', DesignerDiscount);
  }
{% endjavascript %}